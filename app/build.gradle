apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'

apply plugin: 'kotlin-allopen'

allOpen {
    annotation("com.effeta.miparroquiaandroid.TestOpen")
}


android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.effeta.miparroquiaandroid"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$sdk_version"
    implementation "com.android.support:design:$sdk_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:support-vector-drawable:$sdk_version"
    implementation "com.android.support:support-v4:$sdk_version"
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    // RxJava support for Room (use 1.1.0-alpha3 for latest alpha)
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:$room_version"

    // Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$arch_version"
    implementation "android.arch.lifecycle:extensions:$arch_version"
    implementation "android.arch.lifecycle:reactivestreams:$arch_version"
    implementation "com.google.firebase:firebase-core:$firebase_version"
    implementation "com.google.firebase:firebase-firestore:$firebase_version"
    implementation "com.google.firebase:firebase-storage:$firebase_version"
    implementation ("com.firebaseui:firebase-ui-storage:3.2.2") { exclude group: 'com.android.support' }
    implementation "com.google.firebase:firebase-config:$firebase_version"

    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    // Anko Commons
    implementation "org.jetbrains.anko:anko-commons:$anko_version"


    kapt 'com.github.bumptech.glide:compiler:4.6.1'

    //Google maps
    implementation "com.google.android.gms:play-services-maps:$google_service_version"
    implementation "com.google.android.gms:play-services-location:$google_service_version"
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.android.support.test:runner:1.0.1'
    testImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // required if you want to use Mockito for unit tests
    testImplementation "org.mockito:mockito-core:$mokito_version"

    // required if you want to use Mockito for Android tests
    testImplementation "org.mockito:mockito-android:$mokito_version"

    //testCompile "com.nhaarman:mockito-kotlin:x.x.x"
    implementation "com.android.support:cardview-v7:$sdk_version"
    implementation 'joda-time:joda-time:2.9.9'
}

apply plugin: 'com.google.gms.google-services'
